// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/calculadora.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GrpcServer {

  /// <summary>Holder for reflection information generated from Protos/calculadora.proto</summary>
  public static partial class CalculadoraReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/calculadora.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CalculadoraReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhQcm90b3MvY2FsY3VsYWRvcmEucHJvdG8iFwoVTmV3Q2FsY3VsYWRvcmFS",
            "ZXF1ZXN0IjAKFkNhbGN1bGFkb3JhTG9va3VwTW9kZWwSCgoCbjEYASABKAUS",
            "CgoCbjIYAiABKAUicwoQQ2FsY3VsYWRvcmFNb2RlbBIKCgJuMRgBIAEoBRIK",
            "CgJuMhgCIAEoBRIMCgRzb21hGAMgASgFEhEKCXN1YnRyYWNhbxgEIAEoBRIV",
            "Cg1tdWx0aXBsaWNhY2FvGAUgASgFEg8KB2RpdmlzYW8YBiABKAIykQEKC0Nh",
            "bGN1bGFkb3JhEkAKEkdldENhbGN1bGFkb3JhSW5mbxIXLkNhbGN1bGFkb3Jh",
            "TG9va3VwTW9kZWwaES5DYWxjdWxhZG9yYU1vZGVsEkAKEUdldE5ld0NhbGN1",
            "bGFkb3JhEhYuTmV3Q2FsY3VsYWRvcmFSZXF1ZXN0GhEuQ2FsY3VsYWRvcmFN",
            "b2RlbDABQg2qAgpHcnBjU2VydmVyYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.NewCalculadoraRequest), global::GrpcServer.NewCalculadoraRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.CalculadoraLookupModel), global::GrpcServer.CalculadoraLookupModel.Parser, new[]{ "N1", "N2" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServer.CalculadoraModel), global::GrpcServer.CalculadoraModel.Parser, new[]{ "N1", "N2", "Soma", "Subtracao", "Multiplicacao", "Divisao" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class NewCalculadoraRequest : pb::IMessage<NewCalculadoraRequest> {
    private static readonly pb::MessageParser<NewCalculadoraRequest> _parser = new pb::MessageParser<NewCalculadoraRequest>(() => new NewCalculadoraRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewCalculadoraRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcServer.CalculadoraReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewCalculadoraRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewCalculadoraRequest(NewCalculadoraRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewCalculadoraRequest Clone() {
      return new NewCalculadoraRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewCalculadoraRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewCalculadoraRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewCalculadoraRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class CalculadoraLookupModel : pb::IMessage<CalculadoraLookupModel> {
    private static readonly pb::MessageParser<CalculadoraLookupModel> _parser = new pb::MessageParser<CalculadoraLookupModel>(() => new CalculadoraLookupModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CalculadoraLookupModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcServer.CalculadoraReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalculadoraLookupModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalculadoraLookupModel(CalculadoraLookupModel other) : this() {
      n1_ = other.n1_;
      n2_ = other.n2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalculadoraLookupModel Clone() {
      return new CalculadoraLookupModel(this);
    }

    /// <summary>Field number for the "n1" field.</summary>
    public const int N1FieldNumber = 1;
    private int n1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int N1 {
      get { return n1_; }
      set {
        n1_ = value;
      }
    }

    /// <summary>Field number for the "n2" field.</summary>
    public const int N2FieldNumber = 2;
    private int n2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int N2 {
      get { return n2_; }
      set {
        n2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CalculadoraLookupModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CalculadoraLookupModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (N1 != other.N1) return false;
      if (N2 != other.N2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (N1 != 0) hash ^= N1.GetHashCode();
      if (N2 != 0) hash ^= N2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (N1 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(N1);
      }
      if (N2 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(N2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (N1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(N1);
      }
      if (N2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(N2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CalculadoraLookupModel other) {
      if (other == null) {
        return;
      }
      if (other.N1 != 0) {
        N1 = other.N1;
      }
      if (other.N2 != 0) {
        N2 = other.N2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            N1 = input.ReadInt32();
            break;
          }
          case 16: {
            N2 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CalculadoraModel : pb::IMessage<CalculadoraModel> {
    private static readonly pb::MessageParser<CalculadoraModel> _parser = new pb::MessageParser<CalculadoraModel>(() => new CalculadoraModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CalculadoraModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcServer.CalculadoraReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalculadoraModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalculadoraModel(CalculadoraModel other) : this() {
      n1_ = other.n1_;
      n2_ = other.n2_;
      soma_ = other.soma_;
      subtracao_ = other.subtracao_;
      multiplicacao_ = other.multiplicacao_;
      divisao_ = other.divisao_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalculadoraModel Clone() {
      return new CalculadoraModel(this);
    }

    /// <summary>Field number for the "n1" field.</summary>
    public const int N1FieldNumber = 1;
    private int n1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int N1 {
      get { return n1_; }
      set {
        n1_ = value;
      }
    }

    /// <summary>Field number for the "n2" field.</summary>
    public const int N2FieldNumber = 2;
    private int n2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int N2 {
      get { return n2_; }
      set {
        n2_ = value;
      }
    }

    /// <summary>Field number for the "soma" field.</summary>
    public const int SomaFieldNumber = 3;
    private int soma_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Soma {
      get { return soma_; }
      set {
        soma_ = value;
      }
    }

    /// <summary>Field number for the "subtracao" field.</summary>
    public const int SubtracaoFieldNumber = 4;
    private int subtracao_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Subtracao {
      get { return subtracao_; }
      set {
        subtracao_ = value;
      }
    }

    /// <summary>Field number for the "multiplicacao" field.</summary>
    public const int MultiplicacaoFieldNumber = 5;
    private int multiplicacao_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Multiplicacao {
      get { return multiplicacao_; }
      set {
        multiplicacao_ = value;
      }
    }

    /// <summary>Field number for the "divisao" field.</summary>
    public const int DivisaoFieldNumber = 6;
    private float divisao_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Divisao {
      get { return divisao_; }
      set {
        divisao_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CalculadoraModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CalculadoraModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (N1 != other.N1) return false;
      if (N2 != other.N2) return false;
      if (Soma != other.Soma) return false;
      if (Subtracao != other.Subtracao) return false;
      if (Multiplicacao != other.Multiplicacao) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Divisao, other.Divisao)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (N1 != 0) hash ^= N1.GetHashCode();
      if (N2 != 0) hash ^= N2.GetHashCode();
      if (Soma != 0) hash ^= Soma.GetHashCode();
      if (Subtracao != 0) hash ^= Subtracao.GetHashCode();
      if (Multiplicacao != 0) hash ^= Multiplicacao.GetHashCode();
      if (Divisao != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Divisao);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (N1 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(N1);
      }
      if (N2 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(N2);
      }
      if (Soma != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Soma);
      }
      if (Subtracao != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Subtracao);
      }
      if (Multiplicacao != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Multiplicacao);
      }
      if (Divisao != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Divisao);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (N1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(N1);
      }
      if (N2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(N2);
      }
      if (Soma != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Soma);
      }
      if (Subtracao != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Subtracao);
      }
      if (Multiplicacao != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Multiplicacao);
      }
      if (Divisao != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CalculadoraModel other) {
      if (other == null) {
        return;
      }
      if (other.N1 != 0) {
        N1 = other.N1;
      }
      if (other.N2 != 0) {
        N2 = other.N2;
      }
      if (other.Soma != 0) {
        Soma = other.Soma;
      }
      if (other.Subtracao != 0) {
        Subtracao = other.Subtracao;
      }
      if (other.Multiplicacao != 0) {
        Multiplicacao = other.Multiplicacao;
      }
      if (other.Divisao != 0F) {
        Divisao = other.Divisao;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            N1 = input.ReadInt32();
            break;
          }
          case 16: {
            N2 = input.ReadInt32();
            break;
          }
          case 24: {
            Soma = input.ReadInt32();
            break;
          }
          case 32: {
            Subtracao = input.ReadInt32();
            break;
          }
          case 40: {
            Multiplicacao = input.ReadInt32();
            break;
          }
          case 53: {
            Divisao = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
